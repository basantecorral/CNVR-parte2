heat_template_version: 2017-02-24

parameters:
  load_balancer_pool:
    description: Para asociar el servidor al pool del load balancer
    type: string
  net1:
    description: Para asociar net1 al servidor
    type: string
  subnet1:
    description: Para asociar subnet1
    type: string
  net2:
    description: Para asociar net2 (conexion con la bbdd)
    type: string
  subnet2:
    description: Para asociar subnet2
    type: string
  security_group:
    description: security group del servidor
    type: string
  bbdd_ip:
    description: direccion ip de la bbdd
    type: string

resources:
  port1:
    type: OS::Neutron::Port
    properties:
      network: { get_param: net1 }
      fixed_ips:
        - subnet_id: { get_param: subnet1 }
      security_groups: [{ get_param: security_group }]
  port2:
    type: OS::Neutron::Port
    properties:
      network: { get_param: net2 }
      fixed_ips:
        - subnet_id: { get_param: subnet2 }
      security_groups: [{ get_param: security_group }]
  server_user_data:
    type: OS::Heat::SoftwareConfig
    properties:
      config: |
        #!/bin/bash
        echo "auto ens4" >> /etc/network/interfaces.d/50-cloud-init.cfg
        echo "iface ens4 inet dhcp" >> /etc/network/interfaces.d/50-cloud-init.cfg
        ifup ens4
        touch index.html
        echo -e "<!DOCTYPE html>\n<html>\n<body>\n<h1>Practica final CNVR</h1>\n" > index.html
        echo -e "<p> Web desplegada en Openstack con un balanceador de carga. Servidor: $(hostname)</p>\n" >> index.html
        echo -e "<p>Autores: Alvaro Basante Corral y Javier Sanz Saez</p>\n</body>\n</html>" >> index.html
        python -m SimpleHTTPServer
  server:
    type: OS::Nova::Server
    properties:
      image: xenial-server-cloudimg-amd64-vnx
      flavor: m1.smaller
      networks:
        - port: { get_resource: port1 }
        - port: { get_resource: port2 }
      user_data_format: RAW
      user_data: { get_resource: server_user_data }
#Servidor como miembro de un pool del load balancer
  load_balancer_member:
    type: OS::Neutron::LBaaS::PoolMember
    properties:
      pool: { get_param: load_balancer_pool }
      subnet: { get_param: subnet1 }
      address: { get_attr: [port1, fixed_ips, 0, ip_address] }
      protocol_port: 8000
